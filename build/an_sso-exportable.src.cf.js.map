{
  "version": 3,
  "file": "an_sso-exportable.src.cf.js",
  "sourceRoot": "",
  "sources": [
    "an_sso-exportable.src.cf.src.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "ajaxCl = (url, settings) ->\n    args = arguments\n    settings = if args.length == 1 then args[0] else args[1]\n\n    emptyFunction = () ->\n        null\n\n    defaultSettings =\n        url: if args.length == 2 && (typeof url == 'string') then url else '.'\n        cache: true\n        data: {}\n        headers: {}\n        context: null\n        type: 'GET'\n        success: emptyFunction\n        error: emptyFunction\n        complete: emptyFunction\n\n    settings = this.extend(defaultSettings, settings || {})\n\n    mimeTypes =\n        'application/json': 'json'\n        'text/html': 'html'\n        'text/plain': 'text'\n\n    if !settings.cache\n        settings.url = settings.url +\n                        (if settings.url.indexOf('?') then '&' else '?') +\n                        'noCache=' +\n                        Math.floor(Math.random() * 9e9)\n\n    success = (data, xhr, settings) ->\n        status = 'success'\n        settings.success.call(settings.context, data, status, xhr)\n        complete(status, xhr, settings)\n\n    error   = (error, type, xhr, settings) ->\n        settings.error.call(settings.context, xhr, type, error)\n        complete(type, xhr, settings)\n\n    complete = (status, xhr, settings) ->\n        settings.complete.call(settings.context, xhr, status)\n\n    xhr = new XMLHttpRequest()\n\n    readyStateChange = () ->\n        if xhr.readyState == 4\n            result = null\n            mime = xhr.getResponseHeader('content-type')\n            dataType = mimeTypes[mime] || 'text'\n\n            if (xhr.status >= 200 && xhr.status < 300) || xhr.status == 304\n                result = xhr.responseText\n\n                try\n                    if dataType == 'json'\n                        result = JSON.parse(result)\n                catch e\n                    error(e.message, 'parsererror', xhr, settings)\n                    return\n                success(result, xhr, settings)\n                return\n            else\n                result = xhr.responseText\n                try\n                    if dataType == 'json'\n                        result = JSON.parse(result)\n                    error(result, 'error', xhr, settings)\n                    return\n                catch e\n                    error(e.message, 'parsererror', xhr, settings)\n                    return\n\n            error(result, 'error', xhr, settings)\n\n    if xhr.addEventListener\n        xhr.addEventListener('readystatechange', readyStateChange, false)\n    else if xhr.attachEvent\n        xhr.attachEvent('onreadystatechange', readyStateChange)\n\n\n    xhr.open(settings.type, settings.url)\n\n    if settings.type == 'POST'\n        settings.headers = this.extend {\n            'Content-type': 'application/x-www-form-urlencoded'\n        }, settings.headers, {\n            'X-Requested-With': 'XMLHttpRequest'\n        }\n\n    for key of settings.headers\n        xhr.setRequestHeader(key, settings.headers[key])\n    xhr.send(settings.data)\n\n    return this\n\n\nAsmodeeNet = (->\n\n    defaultSuccessCallback = () -> console.log arguments\n    defaultErrorCallback = () -> console.error arguments\n\n    acceptableLocales = ['fr', 'de', 'en', 'it', 'es']\n\n    default_settings =\n        base_is_host: 'https://account.asmodee.net'\n        base_is_path: '/main/v2/oauth'\n        logout_endpoint: '/main/v2/logout'\n        base_url: 'https://api.asmodee.net/main/v1'\n        client_id: null\n        redirect_uri: null\n        cancel_uri: null # Only used in touch mode by the IS\n        logout_redirect_uri: null # if not provided, and not configured in Studio manager for this app, the IS will redirect the user on IS page only!\n        callback_post_logout_redirect: null # the only one solution for callback success in 'page' or 'touch' display mode\n        base_uri_for_iframe: null\n        scope: 'openid+profile'\n        response_type: 'id_token token'\n        display: 'popup'\n        display_options: {}\n        iframe_css: null # only used un 'iframe' display mode\n        callback_signin_success: defaultSuccessCallback # the only one solution for callback success in 'page' or 'touch' display mode\n        callback_signin_error: defaultErrorCallback # the only one solution for callback error in 'page' or 'touch' display mode\n\n    settings = {}\n    state = nonce = null\n    access_token = id_token = access_hash = identity_obj = discovery_obj = jwks = code = null\n    checkErrors = []\n    localStorageIsOk = null\n    popupIframeWindowName = 'AsmodeeNetConnectWithOAuth'\n    try_refresh_name = 'try_refresh'\n    _oauthWindow = null\n\n    iFrame =\n        element: null\n        receiveMessageCallback: null\n        saveOptions: null\n\n    getCryptoValue = () ->\n        crypto = window.crypto||window.msCrypto\n        rnd = 0\n        res = []\n        if crypto\n            rnd = crypto.getRandomValues(new Uint8Array(30))\n        else\n            rnd = [Math.random()]\n        if rnd.constructor == Array\n            rnd.forEach( (r) -> res.push(r.toString(36)))\n        else\n            for key, value of rnd\n                if rnd.hasOwnProperty(key)\n                    res.push(value.toString(36))\n        return (res.join('')+'00000000000000000').slice(2, 16+2)\n\n    disconnect = (callback) ->\n        callback ?= false\n        clearItems()\n\n        access_token = id_token = access_hash = identity_obj = code = null\n        if callback\n            callback()\n            AsmodeeNet.signIn iFrame.saveOptions if settings.display == 'iframe'\n        else\n            window.location.reload()\n\n    oauth = (options) ->\n        if settings.display == 'popup'\n            oauthpopup(options)\n        else if settings.display == 'iframe'\n            oauthiframe(options)\n        else\n            window.location.assign(options.path)\n\n    getPopup = (options) ->\n        options.width ?= 475\n        options.height ?= 500\n        options.windowName ?= popupIframeWindowName\n        options.windowOptions ?= 'location=0,status=0,width=' + options.width +\n                                    ',height=' + options.height\n        options.callback ?= () -> window.location.reload()\n        this._oauthWindow = window.open(options.path, options.windowName, options.windowOptions)\n\n    oauthpopup = (options) ->\n        getPopup options\n        that = this\n        if options.autoclose\n            that._oauthAutoCloseInterval = window.setInterval () ->\n                that._oauthWindow.close()\n                delete that._oauthWindow\n                window.clearInterval(that._oauthAutoCloseInterval) if that._oauthAutoCloseInterval\n                window.clearInterval(that._oauthInterval) if that._oauthInterval\n                options.callback()\n            , 500\n\n        that._oauthInterval = window.setInterval () ->\n            if that._oauthWindow.closed\n                window.clearInterval(that._oauthInterval) if that._oauthInterval\n                window.clearInterval(that._oauthAutoCloseInterval) if that._oauthAutoCloseInterval\n                options.callback()\n        , 1000\n\n    oauthiframe = (options) ->\n        options.width ?= 475\n        options.height ?= 500\n        options.callback ?= () -> window.location.reload()\n        iFrame.element = if settings.iframe_css.indexOf('#') != -1 then window.document.getElementById(settings.iframe_css.replace('#', '')) else window.document.getElementsByClassName(settings.iframe_css)[0]\n        if iFrame.element\n            iFrame.element.name = popupIframeWindowName\n            iFrame.element.width = options.width\n            iFrame.element.height = options.height\n            iFrame.element.src = options.path\n            redirect_uri = settings.redirect_uri\n            iFrame.element.focus() if iFrame.element && !iFrame.element.closed\n            iFrame.element.removeEventListener('load', iFrame.receiveMessageCallback) if iFrame.receiveMessageCallback\n            iFrame.receiveMessageCallback = (e) ->\n                if e.currentTarget.name == popupIframeWindowName\n                    d = (e.currentTarget.contentWindow || e.currentTarget.contentDocument)\n                    item = getItem('gd_connect_hash')\n                    options.callback() if item\n            iFrame.element.addEventListener('load', iFrame.receiveMessageCallback, false)\n\n    authorized = (access_hash_clt) ->\n        access_hash = access_hash_clt\n        access_token = access_hash.access_token\n        id_token = access_hash.id_token\n        code = access_hash.code if access_hash.code\n\n    catHashCheck = (b_hash, bcode) ->\n        mdHex = KJUR.crypto.Util.sha256(bcode)\n        mdHex = mdHex.substr(0, mdHex.length/2)\n        while !(b_hash.length % 4 == 0)\n            b_hash += '='\n        window.AsmodeeNet.verifyBHash(b_hash)\n        return b_hash == btoa(mdHex)\n\n    checkTokens = (nonce, hash) ->\n        if hash.access_token\n            try\n                at_dec = jwt_decode(hash.access_token)\n                at_head = jwt_decode(hash.access_token, { header: true })\n            catch errdecode\n                checkErrors.push \"access_token decode error : \"+errdecode\n                return false\n        if settings.response_type.search('id_token') >= 0\n            if typeof hash.id_token == undefined\n                return false\n            try\n                it_dec = jwt_decode(hash.id_token)\n                it_head = jwt_decode(hash.id_token, { header: true })\n            catch errdecode\n                checkErrors.push \"id_token decode error : \"+errdecode\n                return false\n            if it_head.typ != 'JWT'\n                checkErrors.push 'Invalid type'\n                return false\n            if it_head.alg != 'RS256'\n                checkErrors.push 'Invalid alg'\n                return false\n            if nonce && (it_dec.nonce != nonce)\n                checkErrors.push 'Invalid nonce'\n                return false\n            if URI(it_dec.iss).normalize().toString() != URI(settings.base_is_host).normalize().toString()\n                checkErrors.push 'Invalid issuer'\n                return false\n            if it_dec.aud != settings.client_id && (!Array.isArray(it_dec.aud) || id_dec.aud.indexOf(settings.client_id) == -1)\n                checkErrors.push 'Invalid auditor'\n                return false\n            if it_dec.exp < window.AsmodeeNet.limit_exp_time()\n                checkErrors.push 'Invalid expiration date'\n                return false\n            if typeof it_dec.at_hash == 'string' && !catHashCheck it_dec.at_hash, hash.access_token\n                checkErrors.push 'Invalid at_hash'\n                return false\n            if hash.code && typeof it_dec.c_hash == 'string' && !catHashCheck it_dec.c_hash, hash.code\n                checkErrors.push 'Invalid c_hash'\n                return false\n            alg = [it_head.alg]\n            for key in jwks\n                if key.alg && key.alg == alg[0]\n                    try\n                        return true if KJUR.jws.JWS.verify(hash.id_token, KEYUTIL.getKey(key), alg)\n                    catch e\n                        console.error('JWS verify error', e)\n            checkErrors.push 'Invalid JWS key'\n            return false\n        return true\n\n    checkUrlOptions = () ->\n        if settings.base_is_host\n            u = URI(settings.base_is_host)\n            settings.base_is_host = u.protocol() + '://' + u.host()\n        if settings.base_url\n            settings.base_url = URI(settings.base_url).normalize().toString()\n        if settings.logout_redirect_uri\n            settings.logout_redirect_uri = URI(settings.logout_redirect_uri).normalize().toString()\n\n    checkLogoutRedirect = () ->\n        if settings.logout_redirect_uri\n            re = new RegExp(settings.logout_redirect_uri.replace(/([?.+*()])/g, \"\\\\$1\"))\n            if re.test(window.location.href) && settings.display != 'iframe'\n                found_state = window.location.href.replace(settings.logout_redirect_uri + '&state=', '').replace(/[&#].*$/, '')\n                if (found_state ==  getItem ('logout_state')) || (!found_state && !getItem('logout_state'))\n                    removeItem 'logout_state'\n                    if settings.callback_post_logout_redirect\n                        settings.callback_post_logout_redirect()\n                    else\n                        window.location = '/'\n\n    getLocation =(href) ->\n        l = document.createElement(\"a\")\n        l.href = href\n\n    baseLinkAction = (that, endpoint, options) ->\n        options = options || {}\n        locale = if options.locale then '/' + options.locale else ''\n        locale = 'en' if (locale != '' && acceptableLocales.indexOf(locale) == -1)\n        iFrame.saveOptions = AsmodeeNet.extend {}, options if settings.display == 'iframe'\n        state = getCryptoValue()\n        nonce = getCryptoValue()\n        setItem('state', state, if settings.display == 'iframe' then 1440 else 20)\n        setItem('nonce', nonce, if settings.display == 'iframe' then 1440 else 20)\n        settings.callback_signin_success = options.success || settings.callback_signin_success\n        settings.callback_signin_error = options.error || settings.callback_signin_error\n        urlParsed = getLocation(endpoint)\n        localizedEndpoint = endpoint.replace(urlParsed.pathname, options.locale + urlParsed.pathname)\n        options.path = localizedEndpoint +\n            '?display=' + settings.display +\n            '&response_type=' + encodeURI(settings.response_type) +\n            '&state=' + state +\n            '&client_id=' + settings.client_id +\n            '&scope=' + settings.scope\n        if settings.redirect_uri\n            ruri = settings.redirect_uri\n            ruri += options.redirect_extra if options.redirect_extra\n            options.path += '&redirect_uri=' + encodeURI(ruri)\n        options.path += '&nonce='+nonce if settings.response_type.search('id_token') >= 0\n        if Object.keys(settings.display_options).length > 0\n            for k,v of settings.display_options\n                options.path += '&display_opts['+k+']='+ if v then '1' else '0'\n        options.path += '&cancel_uri=' + encodeURI(settings.cancel_uri) if settings.cancel_uri\n\n        gameThis = that\n        options.callback = () ->\n            removeItem(try_refresh_name)\n            signinCallback(gameThis)\n\n        oauth(options)\n\n    signinCallback = (gameThis) ->\n        item = getItem('gd_connect_hash')\n        if !item\n            settings.callback_signin_error(\"popup closed without signin\") if settings.display == 'popup'\n        else\n            removeItem('gd_connect_hash')\n            hash = {}\n            splitted = null\n            if item.search(/^#/) == 0\n                splitted = item.replace(/^#/, '').split('&')\n                for t in splitted\n                    t = t.split('=')\n                    hash[t[0]] = t[1]\n                if hash.token_type && hash.token_type == 'bearer'\n                    state = getItem('state')\n                    nonce = getItem('nonce')\n                    if hash.state\n                        if hash.state == state\n                            hash.scope = hash.scope.split('+')\n                            hash.expires = jwt_decode(hash.access_token)['exp']\n                            checkErrors = []\n                            if checkTokens(nonce, hash)\n                                removeItem('state')\n                                removeItem('nonce')\n                                authorized(hash)\n                                gameThis.identity {success: settings.callback_signin_success, error: settings.callback_signin_error}\n                            else\n                                settings.callback_signin_error('Tokens validation issue : ', checkErrors)\n                        else\n                            settings.callback_signin_error('Tokens validation issue : ', 'Invalid state')\n\n            else if item.search(/^\\?/) == 0\n                splitted = item.replace(/^\\?/, '').split('&')\n                for t in splitted\n                    t = t.split('=')\n                    hash[t[0]] = t[1]\n                state = getItem('state')\n                removeItem('state')\n                if hash.state && hash.state == state\n                    settings.callback_signin_error(parseInt(hash.status), hash.error, hash.error_description.replace(/\\+/g, ' '))\n\n    checkDisplayOptions = () ->\n        tmpopts = null\n        if settings.display in ['touch', 'iframe']\n            tmpopts = {noheader: true, nofooter: true, lnk2bt: true, leglnk: false, cookies: true}\n        else if settings.display == 'popup'\n            tmpopts = {noheader: false, nofooter: false, lnk2bt: false, leglnk: true}\n        if Object.keys(settings.display_options).length > 0\n            if tmpopts\n                for opt, val of settings.display_options\n                    delete settings.display_options[opt] unless opt in Object.keys(tmpopts)\n        settings.display_options = AsmodeeNet.extend tmpopts, settings.display_options\n        delete settings.display_options.cookies if 'cookies' in Object.keys(settings.display_options) && settings.display_options.cookies == true\n        if settings.display == 'touch'\n            settings.cancel_uri = settings.redirect_uri if !settings.cancel_uri\n\n    setCookie = (name, value, secondes) ->\n        if secondes\n            date = new Date()\n            date.setTime date.getTime() + (secondes * 1000)\n            expires = \"; expires=\" + date.toGMTString()\n        else\n            expires = \"\"\n        document.cookie = name + \"=\" + value + expires + \"; path=/\"\n\n    getCookie = (name) ->\n        nameEQ = name + \"=\"\n        ca = document.cookie.split(\";\")\n        i = 0\n        while i < ca.length\n            c = ca[i]\n            c = c.substring(1, c.length)  while c.charAt(0) is \" \"\n            return c.substring(nameEQ.length, c.length)  if c.indexOf(nameEQ) is 0\n            i++\n        null\n\n    deleteCookie = (name) ->\n        setCookie name, \"\", -1\n\n    clearCookies = () ->\n        cookies = document.cookie.split('; ')\n        for cookie in cookies\n            cookieBase = encodeURIComponent(cookie.split(\";\")[0].split(\"=\")[0]) + '=; expires=Thu, 01-Jan-1970 00:00:01 GMT; domain=' + d.join('.') + ' ;path='\n            pathBits = location.pathname.split('/')\n            while pathBits.length > 0\n                document.cookie = cookieBase + pathBits.join('/')\n                pathBits.pop()\n\n    setItem = (name, value, minutes) ->\n        try\n            store.set(name, value, new Date().getTime() + (minutes * 60000))\n        catch error\n            console.error \"SetItem '\"+name+\"'\", value, error\n\n    getItem = (name) ->\n        try\n            return store.get(name)\n        catch error\n            console.error \"GetItem '\"+name+\"'\", error\n            return null\n\n    removeItem = (name) ->\n        store.remove(name)\n\n    clearItems = () ->\n        store.clearAll()\n\n\n    verifyBHash: (b_hash) -> b_hash # internal use for tests\n\n    init: (options) ->\n        settings = this.extend(default_settings, options)\n        checkUrlOptions()\n        checkDisplayOptions()\n        checkLogoutRedirect()\n        this\n\n    baseSettings: () ->\n        crossDomain: true\n        dataType: 'json'\n        headers:\n            'Authorization': 'Bearer '+access_token\n            'Accept': 'application/json'\n\n    isConnected: () -> this.getAccessToken() != null\n    getAccessToken: () -> access_token\n    getIdToken: () -> id_token\n    getAccessHash: () -> access_hash\n    getDiscovery: () -> discovery_obj\n    getCode: () -> code\n    getCheckErrors: () -> checkErrors\n    isJwksDone: () -> jwks != null\n    getConfiguredScope: () -> settings.scope\n    getConfiguredAPI: () -> settings.base_url\n    getClientId: () -> settings.client_id\n    getSettings: () -> this.extend({}, settings)\n    getIdentity: () -> identity_obj\n\n    getScopes: () ->\n        return null if !this.isConnected()\n        this.getAccessHash()['scope']\n\n    getExpires: () ->\n        return null if !this.isConnected()\n        this.getAccessHash()['expires']\n\n    getExpiresDate: () ->\n        return null if !this.isConnected()\n        new Date(this.getAccessHash()['expires']*1000)\n\n    auth_endpoint: () ->\n        return URI(discovery_obj.authorization_endpoint).normalize().toString() if discovery_obj\n        URI(settings.base_is_host + settings.base_is_path + '/authorize').normalize().toString()\n\n    ident_endpoint: () ->\n        return URI(discovery_obj.userinfo_endpoint).normalize().toString() if discovery_obj\n        URI(settings.base_is_host + settings.base_is_path + '/identity').normalize().toString()\n\n    ajaxq: (type, url, options) ->\n        options ?= {}\n        base_url = options.base_url || settings.base_url || default_settings.base_url\n        delete options.base_url\n        sets = this.extend(options, this.baseSettings(), {type: type})\n        if options.auth != undefined && options.auth == false\n            delete sets.headers.Authorization if sets.headers.Authorization\n            delete sets.auth\n        this.ajax(base_url + url, sets)\n    get: (url, options) ->\n        return this.ajaxq('GET', url, options)\n    post: (url, options) ->\n        return this.ajaxq('POST', url, options)\n    update: (url, options) ->\n        return this.ajaxq('PUT', url, options)\n    delete: (url, options) ->\n        return this.ajaxq('DELETE', url, options)\n\n    discover: (host_port) ->\n        host_port = host_port || settings.base_is_host || default_settings.base_is_host\n        host_port = URI(host_port)\n        host_port = host_port.protocol() + '://' + host_port.host()\n        gameThis = this\n        this.get '/.well-known/openid-configuration',\n            base_url: host_port\n            auth: false\n            success: (data) ->\n                if typeof data == 'object'\n                    discovery_obj = data\n                else\n                    discovery_obj = JSON.parse(data)\n                settings.base_is_host = URI(discovery_obj.issuer).normalize().toString()\n                settings.logout_endpoint = URI(discovery_obj.end_session_endpoint).normalize().toString()\n                gameThis.getJwks()\n            error: () ->\n                console.error \"error Discovery on \"+host_port, arguments\n\n    getJwks: () ->\n        gameThis = this\n        this.get '',\n            base_url: URI(discovery_obj.jwks_uri).normalize().toString()\n            auth: false\n            success: (data) ->\n                if typeof data == 'object'\n                    jwks = data.keys\n                else\n                    jwks = JSON.parse(data).keys\n                if settings.display != 'popup'\n                    signinCallback gameThis\n            error: () ->\n                console.error \"error JWKS\", arguments\n                console.error \"error JWKS => \"+arguments[0] if arguments.length > 0\n                console.error \"error JWKS => \"+arguments[0].statusText if arguments.length > 0\n\n    signUp: (locale, options, special_host, special_path) ->\n        locale = 'en' if acceptableLocales.indexOf(locale) == -1\n        special_host = discovery_obj.issuer unless special_host\n        special_path = '/signup' unless special_path\n        baseLinkAction(this, URI(special_host).normalize().toString() + locale + special_path, options)\n\n    resetPass: (locale, options, special_host, special_path) ->\n        locale = 'en' if acceptableLocales.indexOf(locale) == -1\n        special_host = discovery_obj.issuer unless special_host\n        special_path = '/reset' unless special_path\n        baseLinkAction(this, URI(discovery_obj.issuer).normalize().toString() + locale + special_path, options)\n\n    signIn: (options, special_host, special_path) ->\n        if special_host\n            special_host = URI(special_host).normalize().toString() + locale + special_path\n        else\n            special_host = this.auth_endpoint()\n        baseLinkAction(this, special_host, options)\n\n    identity: (options) ->\n        if !this.isConnected()\n            if options && options.error\n                options.error('Identity error. Not connected', null, null, 'Not Connected')\n            else\n                console.error  'identity error', 'You\\'re not connected'\n            return false\n\n        if this.isConnected() && identity_obj\n            iFrame.element.src = '' if settings.display == 'iframe'\n            options.success(identity_obj, AsmodeeNet.getCode()) if options && options.success\n        else\n            this.get '',\n                base_url: this.ident_endpoint()\n                success: (data) ->\n                    identity_obj = data\n                    iFrame.element.src = '' if settings.display == 'iframe'\n                    options.success(identity_obj, AsmodeeNet.getCode()) if options && options.success\n                error: (context, xhr, type, error) ->\n                    if options && options.error\n                        options.error(context, xhr, type, error)\n                    else\n                        console.error  'identity error', context, xhr, type, error\n\n    restoreTokens: (saved_access_token, saved_id_token, call_identity = true, cbdone = null, clear_before_refresh = null, saved_identity = null) ->\n        if (saved_access_token && access_token)\n            saved_access_token = null\n        if (saved_id_token && id_token)\n            id_token = null\n        if (saved_access_token)\n            hash = {access_token: saved_access_token, id_token: saved_id_token}\n            if (this.isJwksDone())\n                if (checkTokens(null, hash))\n                    decoded = jwt_decode(saved_access_token)\n                    hash.scope = decoded['scope'].split(' ')\n                    hash.expires = decoded['exp']\n                    hash.token_type = decoded['token_type']\n                    removeItem(try_refresh_name)\n                    authorized(hash)\n                    this.identity({success: settings.callback_signin_success, error: settings.callback_signin_error}) if call_identity\n                    identity_obj = saved_identity if saved_identity\n                    if cbdone\n                        cbdone(true)\n                    else\n                        return true\n                else\n                    already_try_refresh = getItem(try_refresh_name)\n                    removeItem(try_refresh_name)\n                    if checkErrors[0] == 'Invalid expiration date' && clear_before_refresh && !already_try_refresh\n                        console.log 'try refresh token'\n                        setItem(try_refresh_name, true)\n                        clear_before_refresh() && AsmodeeNet.signIn({success: cbdone})\n                    else\n                        if cbdone\n                            cbdone(false, checkErrors)\n                        else\n                            return false\n            else\n                setTimeout( () ->\n                    AsmodeeNet.restoreTokens(saved_access_token, saved_id_token, call_identity, cbdone, clear_before_refresh, saved_identity)\n                , 200)\n\n        return null\n\n    setAccessToken: (saved_access_token) ->\n        access_token = saved_access_token\n    setIdToken: (save_id_token) ->\n        id_token = save_id_token\n\n    signOut: (options) ->\n        successCallback = if options && typeof options.success != 'undefined' then options.success else null\n        if this.isConnected() || options.force\n            if settings.logout_redirect_uri\n                state = getCryptoValue()\n                id_token_hint = id_token\n                setItem('logout_state', state, 5)\n                logout_ep = settings.logout_endpoint +\n                    '?post_logout_redirect_uri='+encodeURI(settings.logout_redirect_uri)+\n                    '&state='+state+\n                    '&id_token_hint='+id_token_hint\n                if settings.display == 'iframe'\n                    if iFrame.element\n                        iFrame.element.src = logout_ep\n                        redirect_uri = settings.logout_redirect_uri\n                        iFrame.element.removeEventListener('load', iFrame.receiveMessageCallback) if iFrame.receiveMessageCallback\n                        iFrame.receiveMessageCallback = (e) ->\n                            disconnect(successCallback) if e.currentTarget.name == popupIframeWindowName\n                        iFrame.element.addEventListener('load', iFrame.receiveMessageCallback, false)\n                else if settings.display == 'popup'\n                    options.path = logout_ep\n                    options.callback = () ->\n                        disconnect(successCallback)\n                    oauthpopup(options)\n                else\n                    window.location = logout_ep\n            else\n                disconnect(successCallback)\n\n    trackCb: (closeit) ->\n        closeit ?= true\n\n        if window.location.hash != \"\"\n            setItem('gd_connect_hash', window.location.hash, 5)\n        else if window.location.search != \"\"\n            setItem('gd_connect_hash', window.location.search, 5)\n\n        if window.name == 'AsmodeeNetConnectWithOAuth'\n            console.log 'ok try closeit'\n            window.close() if closeit\n\n    inIframe: () ->\n        return (window.self == window.top)\n\n)\n\nAsmodeeNet.ajax = ajaxCl\nAsmodeeNet.extend = () ->\n    ret = {}\n    for obj in arguments\n        for key of obj\n            ret[key] = obj[key] if Object::hasOwnProperty.call(obj,key)\n    return ret\n\nAsmodeeNet.limit_exp_time = () -> return (Date.now()/1000).toPrecision(10)\n\nAsmodeeNet.jwt_decode = (token, options) ->\n    deco = KJUR.jws.JWS.parse(token)\n    return deco.headerObj if options && options.header != \"undefined\" && options.header == true\n    return deco.payloadObj\n\nmodule.exports\n    AsmodeeNet: AsmodeeNet\n"
  ]
}